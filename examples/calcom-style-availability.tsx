import React from 'react';
import { View, Text, StyleSheet } from 'react-native';

// Example showing the Cal.com-style availability management

export const CalcomStyleAvailabilityExample = () => {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Cal.com-Style Availability Management</Text>
      
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>ðŸŽ¯ Navigation Flow</Text>
        <Text style={styles.step}>1. Trainer goes to Settings tab</Text>
        <Text style={styles.step}>2. Clicks "Availability" option</Text>
        <Text style={styles.step}>3. Opens dedicated availability screen</Text>
        <Text style={styles.step}>4. Back button returns to settings</Text>
        <Text style={styles.step}>5. Clean separation of concerns</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>ðŸ“… Calendar View (Default)</Text>
        <Text style={styles.step}>â€¢ Monthly calendar grid layout</Text>
        <Text style={styles.step}>â€¢ Navigation arrows for prev/next month</Text>
        <Text style={styles.step}>â€¢ Days with availability show blue dot</Text>
        <Text style={styles.step}>â€¢ Available days highlighted in blue</Text>
        <Text style={styles.step}>â€¢ Today highlighted with border</Text>
        <Text style={styles.step}>â€¢ Click any date to add availability</Text>
        <Text style={styles.step}>â€¢ Legend shows available vs not set</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>ðŸ“‹ Weekly View (Alternative)</Text>
        <Text style={styles.step}>â€¢ Traditional day-by-day list</Text>
        <Text style={styles.step}>â€¢ Each day has + button to add slots</Text>
        <Text style={styles.step}>â€¢ Shows existing time ranges</Text>
        <Text style={styles.step}>â€¢ Delete button for each slot</Text>
        <Text style={styles.step}>â€¢ "No availability set" for empty days</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>ðŸ”„ View Toggle</Text>
        <Text style={styles.step}>â€¢ Toggle buttons: Calendar | Weekly</Text>
        <Text style={styles.step}>â€¢ Calendar view for visual overview</Text>
        <Text style={styles.step}>â€¢ Weekly view for detailed management</Text>
        <Text style={styles.step}>â€¢ Smooth switching between views</Text>
        <Text style={styles.step}>â€¢ State preserved when switching</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>âž• Adding Availability</Text>
        <Text style={styles.step}>â€¢ Click calendar date â†’ opens modal</Text>
        <Text style={styles.step}>â€¢ Shows selected date at top</Text>
        <Text style={styles.step}>â€¢ Day selector (Sun, Mon, Tue...)</Text>
        <Text style={styles.step}>â€¢ Time range selection</Text>
        <Text style={styles.step}>â€¢ Quick preset buttons</Text>
        <Text style={styles.step}>â€¢ Add button creates recurring slot</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>ðŸŽ¨ Visual Design</Text>
        <Text style={styles.step}>â€¢ Clean, minimal interface</Text>
        <Text style={styles.step}>â€¢ Consistent with Cal.com aesthetic</Text>
        <Text style={styles.step}>â€¢ Blue primary color for availability</Text>
        <Text style={styles.step}>â€¢ Subtle dots for availability indicators</Text>
        <Text style={styles.step}>â€¢ Card-based layout for sections</Text>
        <Text style={styles.step}>â€¢ Proper spacing and typography</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>ðŸ“± User Experience</Text>
        <Text style={styles.step}>â€¢ Intuitive calendar interaction</Text>
        <Text style={styles.step}>â€¢ Visual feedback on hover/tap</Text>
        <Text style={styles.step}>â€¢ Clear availability indicators</Text>
        <Text style={styles.step}>â€¢ Easy month navigation</Text>
        <Text style={styles.step}>â€¢ Quick access to add availability</Text>
        <Text style={styles.step}>â€¢ Confirmation dialogs for deletion</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>ðŸ”§ Example Usage</Text>
        <Text style={styles.step}>1. Open Settings â†’ Availability</Text>
        <Text style={styles.step}>2. See monthly calendar view</Text>
        <Text style={styles.step}>3. Click on Monday dates â†’ Add 9 AM - 5 PM</Text>
        <Text style={styles.step}>4. Click on Tuesday dates â†’ Add 6 AM - 12 PM</Text>
        <Text style={styles.step}>5. Switch to Weekly view to see all slots</Text>
        <Text style={styles.step}>6. Delete unwanted slots with trash icon</Text>
        <Text style={styles.step}>7. Calendar shows blue dots on available days</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>âœ¨ Key Benefits</Text>
        <Text style={styles.step}>âœ… Familiar calendar interface</Text>
        <Text style={styles.step}>âœ… Visual overview of availability</Text>
        <Text style={styles.step}>âœ… Quick date-based setup</Text>
        <Text style={styles.step}>âœ… Dual view modes for different needs</Text>
        <Text style={styles.step}>âœ… Professional, clean design</Text>
        <Text style={styles.step}>âœ… Intuitive interaction patterns</Text>
        <Text style={styles.step}>âœ… Consistent with popular tools</Text>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    padding: 20,
    backgroundColor: '#f5f5f5',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 30,
    textAlign: 'center',
    color: '#007AFF',
  },
  section: {
    marginBottom: 25,
    backgroundColor: 'white',
    padding: 15,
    borderRadius: 10,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 15,
    color: '#007AFF',
  },
  step: {
    fontSize: 14,
    marginBottom: 8,
    color: '#333',
    paddingLeft: 10,
  },
});